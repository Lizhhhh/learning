// 我们可以在一个选择器中嵌套另一个选择器来实现继承,这样很大程度减少了代码量,并且代码看起来更加清晰

// less
#header {
    h1 {
        font-size: 26px;
        font-weight: bold;
    }

    p {
        font-size: 12px;

        a {
            text-decoration: none;

            &:hover {
                border-width: 1px
            }
        }
    }
}

// CSS代码
#header h1 {
    font-size: 26px;
    font-weight: bold;
}

#header p {
    font-size: 12px;
}

#header p a {
    text-decoration: none;
}

#header p a:hover {
    border-width: 1px;
}

// LESS可以让我们以嵌套的方式编写层叠样式.让我们先看下下面这段CSS:
#header {
    color: black;
}

#header .navigation {
    font-size: 12px;
}

#header .logo {
    width: 300px;
}

#header .logo:hover {
    text-decoration: none;
}

// 在LESS中,我们就可以这样写:
#header {
    color: black;

    .navigation {
        font-size: 12px;
    }

    .logo {
        width: 300px;

        &:hover {
            text-decoration: none;
        }
    }
}

// 注意&符号的使用--如果你想写串联选择器,而不是写后代选择器,就可以用到&了.这点对伪类尤其有用 如:hover 和 :focus.
// 例如:
.bordered {
    &.float {
        float: left;
    }

    .top {
        margin: 5px;
    }
}

// 会输出
.bordered.float {
    float: left;
}

.bordered .top {  // 注意空格
    margin: 5px;
}